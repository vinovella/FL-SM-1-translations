name: Merge All PRs

on:
  workflow_dispatch: {}

jobs:
  merge-all:
    runs-on: ubuntu-latest
    steps:
      - name: Merge all open pull requests
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          set +e  # Continue on error
          sudo apt-get update
          sudo apt-get install -y jq curl
          REPO="${GITHUB_REPOSITORY}"
          OWNER=$(echo "$REPO" | cut -d'/' -f1)
          REPO_NAME=$(echo "$REPO" | cut -d'/' -f2)
          PRS=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/$OWNER/$REPO_NAME/pulls?state=open" | jq '.[].number')
          echo "Open PRs: $PRS"
          for PR in $PRS; do
            echo "Checking mergeability of PR #$PR"
            ATTEMPTS=0
            while true; do
              PRDATA=$(curl -s -H "Authorization: token $GH_TOKEN" \
                "https://api.github.com/repos/$OWNER/$REPO_NAME/pulls/$PR")
              MERGEABLE=$(echo "$PRDATA" | jq -r '.mergeable')
              if [[ "$MERGEABLE" != "null" ]]; then
                break
              fi
              ATTEMPTS=$((ATTEMPTS + 1))
              if [[ $ATTEMPTS -ge 10 ]]; then
                echo "Mergeable status still unknown for PR #$PR after 10 attempts, skipping."
                continue 2
              fi
              echo "Mergeable status unknown for PR #$PR, retrying in 5 seconds..."
              sleep 5
            done

            if [[ "$MERGEABLE" == "true" ]]; then
              echo "Attempting to merge PR #$PR"
              RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X PUT \
                -H "Authorization: token $GH_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/$OWNER/$REPO_NAME/pulls/$PR/merge")
              if [ "$RESPONSE" = "200" ]; then
                echo "Successfully merged PR #$PR"
              else
                echo "Failed to merge PR #$PR (HTTP $RESPONSE) - It may require review, have conflicts, or be blocked."
              fi
            else
              echo "PR #$PR is not mergeable (mergeable=$MERGEABLE), skipping."
            fi
          done
          exit 0  # Always exit successfully so the workflow doesn't fail if some merges fail
